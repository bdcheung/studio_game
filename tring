= TTiimmee..nneeww

(from ruby site)
------------------------------------------------------------------------------
  Time.new -> time
  Time.new(year, month=nil, day=nil, hour=nil, min=nil, sec=nil, utc_offset=nil) -> time
   

------------------------------------------------------------------------------

Returns a Time object.

It is initialized to the current system time if no argument. NNoottee::
The object created will be created using the resolution available on your
system clock, and so may include fractional seconds.

If one or more arguments specified, the time is initialized to the specified
time. _s_e_c may have fraction if it is a rational.

_u_t_c___o_f_f_s_e_t is the offset from UTC. It is a string such as
"+09:00" or a number of seconds such as 32400.

  a = Time.new      #=> 2007-11-19 07:50:02 -0600
  b = Time.new      #=> 2007-11-19 07:50:02 -0600
  a == b            #=> false
  "%.6f" % a.to_f   #=> "1195480202.282373"
  "%.6f" % b.to_f   #=> "1195480202.283415"

  Time.new(2008,6,21, 13,30,0, "+09:00") #=> 2008-06-21 13:30:00 +0900

  # A trip for RubyConf 2007
  t1 = Time.new(2007,11,1,15,25,0, "+09:00") # JST (Narita)
  t2 = Time.new(2007,11,1,12, 5,0, "-05:00") # CDT (Minneapolis)
  t3 = Time.new(2007,11,1,13,25,0, "-05:00") # CDT (Minneapolis)
  t4 = Time.new(2007,11,1,16,53,0, "-04:00") # EDT (Charlotte)
  t5 = Time.new(2007,11,5, 9,24,0, "-05:00") # EST (Charlotte)
  t6 = Time.new(2007,11,5,11,21,0, "-05:00") # EST (Detroit)
  t7 = Time.new(2007,11,5,13,45,0, "-05:00") # EST (Detroit)
  t8 = Time.new(2007,11,6,17,10,0, "+09:00") # JST (Narita)
  p((t2-t1)/3600.0)                          #=> 10.666666666666666
  p((t4-t3)/3600.0)                          #=> 2.466666666666667
  p((t6-t5)/3600.0)                          #=> 1.95
  p((t8-t7)/3600.0)                          #=> 13.416666666666666


